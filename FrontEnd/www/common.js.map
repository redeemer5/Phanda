{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-4e92c885.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-ba834eff.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-c90aaa66.js","webpack:///./node_modules/@ionic/core/dist/esm/legacy/chunk-cae2ca23.js","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/httpservices.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiH;;;;;;;;;;;;;AC1CjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAY,SAAI;AACiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB,EAAE;AACtD,+BAA+B,iBAAiB,EAAE;AAClD,kCAAkC,iBAAiB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,EAAE;AACxE;AACA;AACA;AACA,6CAA6C,QAAQ,+CAAiB;AACtE;AACA,WAAW,iDAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACkF;;;;;;;;;;;;;ACnDrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AAC4L;;;;;;;;;;;;;AChG5L;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;;;;;;;;;;;;;;;;;;;;AC9GS;AACuC;AACrC;AAEM;AAKnD;IAEE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEnC,eAAe;QACf,gBAAW,GAAG;YACb,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH;IAPuC,CAAC;IASzC,oBAAoB;IACpB,gCAAW,GAAX,UAAY,KAAwB;QAClC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KA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","file":"common.js","sourcesContent":["/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nvar hapticSelection = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nvar hapticSelectionStart = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nvar hapticSelectionChanged = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nvar hapticSelectionEnd = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","var rIC = function (callback) {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar findItemLabel = function (componentEl) {\n    var itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nvar renderHiddenInput = function (always, container, name, value, disabled) {\n    if (always || hasShadowDom(container)) {\n        var input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nvar clamp = function (min, n, max) {\n    return Math.max(min, Math.min(n, max));\n};\nvar assert = function (actual, reason) {\n    if (!actual) {\n        var message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nvar pointerCoord = function (ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nvar isEndSide = function (side) {\n    var isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n    }\n};\nvar debounceEvent = function (event, wait) {\n    var original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nvar debounce = function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timer;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timer);\n        timer = setTimeout.apply(void 0, [func, wait].concat(args));\n    };\n};\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nvar sanitizeDOMString = function (untrustedString) {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        var documentFragment_1 = document.createDocumentFragment();\n        var workingDiv = document.createElement('div');\n        documentFragment_1.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(function (blockedTag) {\n            var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\n            for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                var element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment_1.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                var childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        var documentFragmentChildren = getElementChildren(documentFragment_1);\n        /* tslint:disable-next-line */\n        for (var childIndex = 0; childIndex < documentFragmentChildren.length; childIndex++) {\n            sanitizeElement(documentFragmentChildren[childIndex]);\n        }\n        // Append document fragment to div\n        var fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment_1);\n        // First child is always the div we did our work in\n        var getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nvar sanitizeElement = function (element) {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (var i = element.attributes.length - 1; i >= 0; i--) {\n        var attribute = element.attributes[i];\n        var attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        var attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    var childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (var i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nvar getElementChildren = function (element) {\n    return (element.children != null) ? element.children : element.childNodes;\n};\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport { sanitizeDOMString as s };\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport {User} from '../models/user';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n   // Http Options\n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n \n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n   // post method\n   createItem(item): Observable<User> {\n    return this.http\n      .post<User>('http://172.20.10.2:8080/addUser', JSON.stringify(item), this.httpOptions)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n\n  getNameAndPassword(name,email)\n  {\n    return this.http.get('http://172.20.10.2:8080/getUserDetails/' + name + '/' + email);\n  }\n\n\n   // Get single student data by ID\n  //  getItem(id): Observable<Student> {\n  //   return this.http\n  //     .get<Student>(this.base_path + '/' + id)\n  //     .pipe(\n  //       retry(2),\n  //       catchError(this.handleError)\n  //     )\n  // }\n}\n","// import { Product } from './cart.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\nexport interface Product {\r\n  mid: number;\r\n  item_name: string;\r\n  item_price: number;\r\n  resid: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n  private data: Product[] = [\r\n    // {\r\n    //   category: 'Pizza',\r\n    //   expanded: true,\r\n    //   products: [\r\n    //     { id: 0, name: 'Salami', price: '8' },\r\n    //     { id: 1, name: 'Classic', price: '5' },\r\n    //     { id: 2, name: 'Tuna', price: '9' },\r\n    //     { id: 3, name: 'Hawai', price: '7' }\r\n    //   ]\r\n    // },\r\n    // {\r\n    //   category: 'Pasta',\r\n    //   products: [\r\n    //     { id: 4, name: 'Mac & Cheese', price: '8' },\r\n    //     { id: 5, name: 'Bolognese', price: '6' }\r\n    //   ]\r\n    // },\r\n    // {\r\n    //   category: 'Salad',\r\n    //   products: [\r\n    //     { id: 6, name: 'Ham & Egg', price: '8' },\r\n    //     { id: 7, name: 'Basic', price: '5' },\r\n    //     { id: 8, name: 'Ceaser', price: '9' }\r\n    //   ]\r\n    // }\r\n  ];\r\n \r\n  private cart = [];\r\n  private cartItemCount = new BehaviorSubject(0);\r\n\r\n \r\n  constructor() { }\r\n \r\n  getProducts() {\r\n    return this.data;\r\n  }\r\n \r\n  getCart() {\r\n    return this.cart;\r\n  }\r\n \r\n  addProduct(product) {\r\n    this.cart.push(product);\r\n  }\r\n\r\n  removeProduct(product){\r\n    \r\n    for (let [index, p] of this.cart.entries()) {\r\n      if (p.mid === product.mid) {\r\n        this.cartItemCount.next(this.cartItemCount.value - p.item_price);\r\n        this.cart.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","//import { Order } from './../model/order.interface';\r\nimport { Order } from '../models/order';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpservicesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n    // Handle API errors\r\n    handleError(error: HttpErrorResponse) {\r\n      if (error.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        console.error('An error occurred:', error.error.message);\r\n      } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        console.error(\r\n          `Backend returned code ${error.status}, ` +\r\n          `body was: ${error.error}`);\r\n      }\r\n      // return an observable with a user-facing error message\r\n      return throwError(\r\n        'Something bad happened; please try again later.');\r\n    };\r\n\r\n\r\n  getMenu(id) {\r\n    return this.http.get('http://172.20.10.2:8080/getMenu/' + id);\r\n }\r\n\r\n getTrips()\r\n {\r\n   return this.http.get('http://172.20.10.2:8080/getTrip');\r\n }\r\n\r\n\r\n \r\n \r\n getStops(des)\r\n {\r\n   \r\n   return this.http.get('http://172.20.10.2:8080/stop/' + des);\r\n }\r\n\r\n\r\n getRestaurants(id)\r\n {\r\n   return this.http.get('http://172.20.10.2:8080/res/' + id);\r\n }\r\n\r\n \r\n getResInfo(resid)\r\n {\r\n  return this.http.get('http://172.20.10.2:8080/resinfo/' + resid); \r\n }\r\n\r\n//  postOrder(order)\r\n//  {\r\n//   return this.http.post('http://localhost:8080/order' + order);\r\n//  }\r\n\r\n   // post method\r\n   postOrder(item): Observable<Order> {\r\n    return this.http\r\n      .post<Order>('http://172.20.10.2:8080/userOder', JSON.stringify(item), this.httpOptions)\r\n      .pipe(\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}