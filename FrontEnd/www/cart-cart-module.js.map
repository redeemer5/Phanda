{"version":3,"sources":["webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/cart.page.html","webpack:///./src/app/cart/cart.page.scss","webpack:///./src/app/cart/cart.page.ts","webpack:///./src/app/services/firestore.service.ts"],"names":[],"mappings":"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","file":"cart-cart-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CartPage } from './cart.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CartPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CartPage]\r\n})\r\nexport class CartPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>My Cart</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <h3>Selected items</h3>\\r\\n  <h4>Please confirm your order</h4>\\r\\n\\r\\n  <ion-list>\\r\\n    <h4>Order number: {{orderNumber}}</h4>\\r\\n    \\r\\n      <!-- <div *ngFor=\\\"let item of selectedItems\\\" lines=\\\"inset\\\">\\r\\n        <ion-item>\\r\\n          <h5>\\r\\n            {{ item.item_name }} - {{ item.item_price | currency:'R ':'symbol' }}\\r\\n          </h5>\\r\\n          <ion-label slot=\\\"end\\\" text-right>\\r\\n            {{ (item.item_price * item.count) | currency:'R ':'symbol' }}</ion-label>\\r\\n        </ion-item>\\r\\n      </div> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <ion-item-sliding *ngFor=\\\"let item of selectedItems\\\" lines=\\\"inset\\\">\\r\\n      <ion-item>\\r\\n        <h5>\\r\\n          {{ item.item_name }} - {{ item.item_price | currency:'R ':'symbol' }}\\r\\n        </h5>\\r\\n        <ion-label slot=\\\"end\\\" text-right>\\r\\n          {{ (item.item_price * item.count) | currency:'R ':'symbol' }}</ion-label>\\r\\n      </ion-item>\\r\\n      \\r\\n\\r\\n\\r\\n      <ion-item-options>\\r\\n\\r\\n        <ion-item-option color=\\\"primary\\\" (click)=\\\"remove()\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"delete\\\" ></ion-icon>\\r\\n          Delete\\r\\n        </ion-item-option>\\r\\n\\r\\n        <ion-item-option color=\\\"secondary\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"archive\\\"></ion-icon>\\r\\n          Archive\\r\\n        </ion-item-option>\\r\\n\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n\\r\\n  </ion-list>\\r\\n\\r\\n  <!-- <ion-item>\\r\\n    Total: <span slot=\\\"end\\\">{{ total | currency:'R ':'symbol' }}</span>\\r\\n  </ion-item> -->\\r\\n\\r\\n  <h3>your total price is</h3>\\r\\n  <ion-label>R {{total}} </ion-label>\\r\\n  <div id=\\\"paypal-checkout-btn\\\"></div>\\r\\n\\r\\n  \\r\\n\\r\\n  <!-- <ion-button expand=\\\"block\\\" margin (click)=\\\"fireStoreUpload()\\\">Checkout</ion-button>\\r\\n\\r\\n  <ion-button (click)=\\\"NextPage()\\\">next page with data</ion-button> -->\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\"","import { PaypalPage } from './../paypal/paypal.page';\r\nimport { Component, OnInit,AfterViewChecked } from '@angular/core';\r\nimport { CartService } from '../services/cart.service';\r\nimport { HttpservicesService } from '../services/httpservices.service';\r\n//firestore\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n\r\ndeclare let paypal:any;\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.page.html',\r\n  styleUrls: ['./cart.page.scss'],\r\n})\r\nexport class CartPage implements OnInit, AfterViewChecked {\r\n\r\n  \r\n  convert:number;\r\n  sum:number;\r\n\r\n  //firestore declarations\r\n  createSongForm: FormGroup;\r\n  router: any;\r\n\r\n  // array, total, and order number declaration\r\n  selectedItems = [];\r\n  total = 0;\r\n  // orderNumber: number;\r\n  orderNumber:number = Math.floor(Math.random() * 100);\r\n\r\n  // hold current user and restaurant data\r\n  userData: any = {};\r\n  resData: any = {};\r\n  \r\n\r\n  constructor(private cartService: CartService,\r\n    private http: HttpservicesService,private httpc:HttpClient,public alertController: AlertController,\r\n\r\n    //firestore\r\n    public loadingCtrl: LoadingController,\r\n    public alertCtrl: AlertController,\r\n    public firestoreService: FirestoreService,\r\n    public navCtrl: NavController,\r\n    formBuilder: FormBuilder,\r\n    private routerr: Router\r\n\r\n  ) {\r\n\r\n    if (localStorage.getItem('userData') !== undefined) {\r\n      this.userData = JSON.parse(localStorage.getItem('userData'));\r\n    }\r\n\r\n    if (localStorage.getItem('resData') !== undefined) {\r\n      this.resData = JSON.parse(localStorage.getItem('resData'));\r\n    }\r\n  }\r\n\r\n  today;\r\n\r\n  // go to paypal page with value\r\n  NextPage() {\r\n\r\n    const now = new Date();\r\n    this.today = now.toISOString();\r\n    // this.routerr.navigateByUrl('/paypal/' + this.total);\r\n    let serverData = {\r\n      // user side info\r\n      date: this.today,\r\n      name: this.userData.name,\r\n      surname: this.userData.surname,\r\n      cell:this.userData.cell,\r\n      email: this.userData.email,\r\n      \r\n      // restuarant side info\r\n      restuarant: this.resData.restaurant_name,\r\n      restuarantno: this.resData.restaurant_phone_number,\r\n      orderno: this.orderNumber.toString(),\r\n      total: this.total,\r\n\r\n      // to get what the user has orderd uncomment the code below\r\n\r\n      // items: this.selectedItems      \r\n    }\r\n    this.http.postOrder(serverData).subscribe((response) =>{\r\n    });    \r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getCartInfo();\r\n  }\r\n\r\n  \r\n\r\n  getCartInfo()\r\n  {\r\n        // api call to convert the rates\r\n        setInterval(() => {\r\n          this.httpc.get<any>('https://api.exchangerate-api.com/v4/latest/USD')\r\n        .subscribe(data => {\r\n          this.convert = data.rates.ZAR;\r\n          this.sum = this.total / this.convert;\r\n        //  console.log(this.sum)\r\n        });\r\n        }, 10000)\r\n        // api call to convert the rates\r\n    \r\n        // get pushed items from the array\r\n        let items: any = this.cartService.getCart();\r\n        // let selected = {};\r\n        this.selectedItems = items;\r\n        let price = 0;\r\n        this.selectedItems.map((item) => price += item.item_price);\r\n        this.total = price;\r\n        \r\n        // get pushed items from the array\r\n  }\r\n\r\n  // paypal code start\r\n  addScript: boolean =false;\r\n  paypalLoad:boolean = true;\r\n  finalAmount: number;\r\n\r\n  paypalConfig = {\r\n    env:  'production',\r\n    client:{\r\n      sandbox:'Aeuh_e9M4o1YxR8ZXanPCLsPIxMeImL3KzTB9vvsGk9gR5ps1QqfmCeX3pn2iS_cGm8_4OizWQfSwvaM',\r\n      production:'AaTKCd3x9c3LDRB0biM3GKq2FK9s13qI_2zL68BWGrQnZEgY1L2UHAYX1NLy5VhtcrZad7_kQAVj53Xe'\r\n    },\r\n    commit:true,\r\n    payment: (data, actions) =>\r\n    {\r\n      return actions.payment.create({\r\n        payment:{\r\n          transactions:[\r\n            {amount: {total: this.sum.toFixed(2),currency: 'USD'}}\r\n          ]\r\n        }\r\n      });\r\n    },\r\n\r\n    onAuthorize: (data, actions) =>\r\n    {\r\n      return actions.payment.execute().then((payment) =>{\r\n        // redirect user when the payment is done\r\n        this.NextPage();\r\n        this.presentAlert();\r\n      })\r\n    }\r\n  };\r\n\r\nngAfterViewChecked():void{\r\n  if(!this.addScript)\r\n  {\r\n    this.addPaypalScript().then(()=>{\r\n      paypal.Button.render(this.paypalConfig, '#paypal-checkout-btn')\r\n      this.paypalLoad = false;\r\n    })\r\n  }\r\n}\r\n\r\n  addPaypalScript()\r\n  {\r\n    this.addScript= true;\r\n    return new Promise((resolve,reject)=>{\r\n    let scripttagElement = document.createElement('script');\r\n    scripttagElement.src = 'https://www.paypalobjects.com/api/checkout.js';\r\n    scripttagElement.onload = resolve;\r\n    document.body.appendChild(scripttagElement);\r\n    })\r\n  }\r\n\r\n  // paypal code end\r\n\r\n  remove(product)\r\n  {\r\n    this.cartService.removeProduct(product);\r\n    this.getCartInfo();\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirmation',\r\n      subHeader: 'All done !',\r\n      message: 'Your order has been accepted by the restaurant. See you soon.',\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n  // async fireStoreUpload() {\r\n  //   var loading = await this.loadingCtrl.create();\r\n  //   loading.message = \"Please wait !\";\r\n\r\n  //   var one: any = this.selectedItems;\r\n\r\n  //   this.firestoreService\r\n  //     .createSong(one)\r\n  //     .then(\r\n  //       () => {\r\n  //         loading.dismiss().then(() => {\r\n  //           // this.navCtrl.navigateForward(\"/home\");\r\n  //         });\r\n  //       },\r\n  //       error => {\r\n  //         console.error(error);\r\n  //       }\r\n  //     );\r\n  //   console.log(this.selectedItems);\r\n\r\n  //   return await loading.present();\r\n\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Order } from '../model/order.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor(public firestore: AngularFirestore) { }\r\n\r\n  createSong(\r\n    order:string\r\n  ): Promise<void> {\r\n    const id = this.firestore.createId();\r\n\r\n    return this.firestore.doc(`Order/${id}`).set({\r\n      id,\r\n      order,\r\n    });\r\n  }\r\n\r\n  getSongList(): AngularFirestoreCollection<Order> {\r\n    return this.firestore.collection(`Order`);\r\n  }\r\n\r\n  getSongDetail(songId: string): AngularFirestoreDocument<Order> {\r\n    return this.firestore.collection('Order').doc(songId);\r\n  }\r\n\r\n  deleteSong(songId: string): Promise<void> {\r\n    return this.firestore.doc(`Order/${songId}`).delete();\r\n  }\r\n}\r\n"],"sourceRoot":""}