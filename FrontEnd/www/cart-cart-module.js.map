{"version":3,"sources":["webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/cart.page.html","webpack:///./src/app/cart/cart.page.scss","webpack:///./src/app/cart/cart.page.ts","webpack:///./src/app/services/firestore.service.ts"],"names":[],"mappings":"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","file":"cart-cart-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CartPage } from './cart.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CartPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CartPage]\r\n})\r\nexport class CartPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>My Cart</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n \\r\\n<ion-content>\\r\\n\\r\\n  <h3> Selected items </h3>\\r\\n  <h4>Please confirm your order </h4>\\r\\n\\r\\n  <ion-list> \\r\\n      <h4>Order number: {{orderNumber}}</h4>\\r\\n      <ion-item-sliding>\\r\\n      <div *ngFor=\\\"let item of selectedItems\\\" lines=\\\"inset\\\">\\r\\n          <ion-item>\\r\\n              <h5> {{ item.item_name }} - {{ item.item_price | currency:'R ':'symbol' }} </h5>\\r\\n              <ion-label slot=\\\"end\\\" text-right>{{ (item.item_price * item.count) | currency:'R ':'symbol' }}</ion-label>\\r\\n        </ion-item>\\r\\n    \\r\\n      </div>\\r\\n\\r\\n      <ion-item>\\r\\n          Total: <span slot=\\\"end\\\">{{ total | currency:'R ':'symbol' }}</span>\\r\\n        </ion-item>\\r\\n\\r\\n    <ion-item-options>\\r\\n        <ion-item-option color=\\\"primary\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"delete\\\"></ion-icon>\\r\\n          Delete\\r\\n        </ion-item-option>\\r\\n        <ion-item-option color=\\\"secondary\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"archive\\\"></ion-icon>\\r\\n          Archive\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-button expand=\\\"block\\\" margin (click)=\\\"fireStoreUpload()\\\">Checkout</ion-button>\\r\\n\\r\\n  <ion-button (click)=\\\"NextPage()\\\">next page with data</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\"","import { PaypalPage } from './../paypal/paypal.page';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../services/cart.service';\r\nimport {HttpservicesService} from '../services/httpservices.service';\r\n//firestore\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.page.html',\r\n  styleUrls: ['./cart.page.scss'],\r\n})\r\nexport class CartPage implements OnInit {\r\n\r\n  //firestore declarations\r\n  createSongForm: FormGroup;\r\n  router: any;\r\n\r\n  // array, total, and order number declaration\r\n  selectedItems = [];\r\n  total = 0;\r\n  orderNumber: number;\r\n \r\n  constructor(private cartService: CartService,\r\n              private http:HttpservicesService,\r\n\r\n              //firestore\r\n              public loadingCtrl: LoadingController,\r\n              public alertCtrl: AlertController,\r\n              public firestoreService: FirestoreService,\r\n              public navCtrl: NavController,\r\n              formBuilder: FormBuilder,\r\n              private routerr: Router\r\n              \r\n              ) {}\r\n\r\n  \r\n    // go to paypal page with value\r\n    NextPage()\r\n    {\r\n      this.routerr.navigateByUrl('/paypal/' + this.total);\r\n      // this.fireStoreUpload();\r\n    }\r\n \r\n  ngOnInit() {\r\n    \r\n    let items:any = this.cartService.getCart();\r\n   // let selected = {};\r\n    this.selectedItems = items;\r\n    let price = 0;\r\n    this.selectedItems.map((item) => price += item.item_price );\r\n    this.total = price;\r\n\r\n    this.orderNumber = Math.floor(Math.random()*100);\r\n\r\n  }\r\n\r\n  async fireStoreUpload()\r\n  {\r\n    var loading = await this.loadingCtrl.create();\r\n    loading.message = \"Please wait !\";\r\n\r\n    var one:any = this.selectedItems;\r\n\r\n    this.firestoreService\r\n    .createSong(one)\r\n    .then(\r\n      () => {\r\n        loading.dismiss().then(() => {\r\n          // this.navCtrl.navigateForward(\"/home\");\r\n        });\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n    console.log(this.selectedItems);\r\n\r\n  return await loading.present();\r\n\r\n  }\r\n\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Order } from '../model/order.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor(public firestore: AngularFirestore) { }\r\n\r\n  createSong(\r\n    order:string\r\n  ): Promise<void> {\r\n    const id = this.firestore.createId();\r\n\r\n    return this.firestore.doc(`Order/${id}`).set({\r\n      id,\r\n      order,\r\n    });\r\n  }\r\n\r\n  getSongList(): AngularFirestoreCollection<Order> {\r\n    return this.firestore.collection(`Order`);\r\n  }\r\n\r\n  getSongDetail(songId: string): AngularFirestoreDocument<Order> {\r\n    return this.firestore.collection('Order').doc(songId);\r\n  }\r\n\r\n  deleteSong(songId: string): Promise<void> {\r\n    return this.firestore.doc(`Order/${songId}`).delete();\r\n  }\r\n}\r\n"],"sourceRoot":""}